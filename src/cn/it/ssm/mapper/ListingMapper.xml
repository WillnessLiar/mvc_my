<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.it.ssm.mapper.ListingMapper" >
  <resultMap id="BaseResultMap" type="cn.it.ssm.po.Listing" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="people_name" property="peopleName" jdbcType="VARCHAR" />
    <result column="order_name" property="orderName" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, people_name, order_name, price, date, number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.it.ssm.po.ListingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from listing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from listing
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from listing
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.it.ssm.po.ListingExample" >
    delete from listing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.it.ssm.po.Listing" >
    insert into listing (order_id, people_name, order_name, 
      price, date, number)
    values (#{orderId,jdbcType=INTEGER}, #{peopleName,jdbcType=VARCHAR}, #{orderName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{date,jdbcType=DATE}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.it.ssm.po.Listing" >
    insert into listing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="peopleName != null" >
        people_name,
      </if>
      <if test="orderName != null" >
        order_name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="peopleName != null" >
        #{peopleName,jdbcType=VARCHAR},
      </if>
      <if test="orderName != null" >
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.it.ssm.po.ListingExample" resultType="java.lang.Integer" >
    select count(*) from listing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update listing
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.peopleName != null" >
        people_name = #{record.peopleName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderName != null" >
        order_name = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update listing
    set order_id = #{record.orderId,jdbcType=INTEGER},
      people_name = #{record.peopleName,jdbcType=VARCHAR},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      date = #{record.date,jdbcType=DATE},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.it.ssm.po.Listing" >
    update listing
    <set >
      <if test="peopleName != null" >
        people_name = #{peopleName,jdbcType=VARCHAR},
      </if>
      <if test="orderName != null" >
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.it.ssm.po.Listing" >
    update listing
    set people_name = #{peopleName,jdbcType=VARCHAR},
      order_name = #{orderName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      date = #{date,jdbcType=DATE},
      number = #{number,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>